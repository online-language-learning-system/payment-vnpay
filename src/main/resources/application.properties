# ===================== SERVER CONFIG =====================
server.port=9006
server.servlet.context-path=/payment-vnpay
spring.application.name=payment-vnpay
spring.threads.virtual.enabled=true

# ===================== MANAGEMENT & TRACING =====================
management.tracing.sampling.probability=1.0
management.endpoints.web.exposure.include=prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.tags.application=${spring.application.name}

logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
logging.level.com.hub.payment_vnpay=DEBUG

# ===================== SECURITY CONFIG =====================
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://identity:8080/realms/CourseRealm}

# ===================== DATABASE =====================
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.url=${MSSQL_DATASOURCE_URL:jdbc:sqlserver://localhost:14330};databaseName=payment_db;encrypt=true;trustServerCertificate=true
spring.datasource.username=${MSSQL_SA_USERNAME:sa}
spring.datasource.password=${MSSQL_SA_PASSWORD:6$3S6zPKpJ+Y2-*J}


spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect

# ===================== SWAGGER CONFIG =====================
springdoc.swagger-ui.path=/swagger-ui
springdoc.packagesToScan=com.hub.payment_vnpay
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
springdoc.swagger-ui.oauth.client-id=swagger-ui
springdoc.oauthflow.authorization-url=http://identity/realms/Yas/protocol/openid-connect/auth
springdoc.oauthflow.token-url=http://identity/realms/Yas/protocol/openid-connect/token

# ===================== CORS =====================
cors.allowed-origins=*

# ===================== VNPay CONFIG =====================
vnp.apiUrl=https://sandbox.vnpayment.vn/paymentv2/vpcpay.html
vnp.querydr=https://sandbox.vnpayment.vn/merchant_webapi/api/transaction
vnp.tmnCode=OT1NPZ6P
vnp.hashSecret=LS3F5H2NZ63HJATQ9AATSA83BFKSYH5L
vnp.returnUrl=https://shandi-brachydactylous-spousally.ngrok-free.dev/payment-vnpay/callback
vnp.ipnUrl=https://shandi-brachydactylous-spousally.ngrok-free.dev/payment-vnpay/ipn
vnp.version=2.1.0
vnp.command=pay
vnp.locale=vn
vnp.currency=VND
vnp.bankCode=NCB

# ===================== KAFKA + CLOUD FUNCTION =====================
spring.cloud.function.definition=processOrder
spring.cloud.stream.bindings.processOrder-in-0.destination=order.events
spring.cloud.stream.bindings.processOrder-in-0.group=payment-vnpay
spring.cloud.stream.bindings.processOrder-out-0.destination=payment.events
spring.cloud.stream.kafka.binder.brokers=${KAFKA_SERVICE_HOST:kafka}:${KAFKA_SERVICE_PORT:29092}
spring.cloud.stream.kafka.binder.auto-create-topics=true

# Logging Kafka
logging.level.org.springframework.cloud.function=DEBUG
logging.level.org.springframework.cloud.stream=DEBUG
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# ?? Kafka g?i object JSON ??p và rõ ràng (thay vì byte)
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.producer.properties.spring.json.trusted.packages=*
# ===================== APPLICATION TYPE =====================
spring.main.web-application-type=servlet
